let selectionMappings = {
    PixelSelectionPixelMapping : {
        dataMap: 'MNIST1000',
        propMap: {
            /** @property {object} effects: how to draw the points based on the selection*/
            effects: ['O'],// TODO support other selection marker effects - currently O and X marker
            /** @property {object} group: how to group the points based on the selection*/
            group: {}, // selected points
            /** @property {object} color: how to color the points based on the selection*/
            color: {propAssign: ReScatter.data.DataMapper.propAssign.POINT}, // copy colors from base plot
            /** @property {object} size: how to size the points based on the selection*/
            size: {
                mapFn:function () {
                    return 6;
                }
            }
        }
    }
};


let siteConfig = {
    SiteTitle: 'Layout Example',
    Layouts: [
        {
            id: 100, title: 'MNIST tSNE embedding',
            description: 'tsne map based on 10000 28x28 MNIST digits',
            /** property {Array of Object} dataMaps
             * Each object identifies a nrrd file containing float data that can be used to
             * calculate overlay effects. In the MNIST example this data is the 10000x784 matrix
             * of digits/normalized pixel values
             */
            dataMaps: [
                {id: 'MNIST1000', filePath:'../data/np10000x784.nrrd.gz'}
            ],
            /** @property {object} plots: definitions of the scatter plots in this layout*/
            plots: [
                /** Configuration for the Digits t-SNE plot where the pixels form the dimensions */
                {
                    /** @property {string] id: The display name of the plot */
                    id: 'Digits',
                    /** @property {enum} layoutTarget: Where the the plot will be displayed
                     * two options are supported GRID or MASTER
                     * GRID plots are placed in order in the grid
                     * MASTER plot (there is only a single master plot and up to 8 regular plots)
                     * The MASTER plot layout has one central master and up to 8 ancillary, smaller, plots.
                     * If not master plot is present the plots marked with GRID are distributed in order
                     * (left-right, top-bottom) over a 4x3 grid.
                     */
                    layoutTarget: ReScatter.control.LayoutController.LayoutTarget.GRID,
                    data: {
                        points: '../data/MNIST10000_tsne_plot.json',
                        props: '../data/MNIST10000_props.json',
                    },
                    format: {
                        id: 'label',
                        symbol: 'label',
                        primary: 'label',
                        color: function (prop) {
                            let colors = {
                                0: 0xFF0000,
                                1: 0xFF9900,
                                2: 0xCCFF00,
                                3: 0x33FF00,
                                4: 0x00FF66,
                                5: 0x00FFFF,
                                6: 0x0066FF,
                                7: 0x3300FF,
                                8: 0xCC00FF,
                                9: 0xFF0099
                            };
                            return colors[prop.label];
                        },
                    },
                    selections: {
                        /** @property {string} selectionOut: the id of the permanent selection generated by this plot*/
                        selectionOut: 'Digits',
                        /** @property {string} dynamicSelectionOut: the id of the dynamic selection generated by this plot*/
                        dynamicSelectionOut: 'DigitsDynamic',
                        /** @property {object} selectionIn: how to alter the plot properties
                         * based on an incoming permanent selection*/
                        selectionIn: {
                            Digits: selectionMappings.PixelSelectionPixelMapping,
                        },
                        /** @property {object} dynamicSelectionIn: how to alter the plot properties
                         * based on an incoming dynamic selection
                         */
                        dynamicSelectionIn: {
                            DigitsDynamic: selectionMappings.PixelSelectionPixelMapping,
                        },
                        /** @property {object} selectionDefaults: Indicates the default settings
                         * for the context menu in this plot.
                         */
                        selectionDefaults: {
                            numNeighbours: 49,
                            selectOver: ReScatter.control.PixijsPlotController.SelectionEnum.MOUSEOVER,
                            mouseOverExcludeSeed: false
                        }
                    }
                }
            ]
        }
    ]
};

try {
    if (Object.prototype.toString.call(global.process) === '[object process]') {
        exports.siteConfig = siteConfig;
    }
} catch(e) {
    console.log('In browser');
    window.siteConfig = siteConfig;
}
